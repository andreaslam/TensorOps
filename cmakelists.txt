set(CMAKE_CXX_STANDARD 17)
cmake_minimum_required(VERSION 3.14)
project(hip_cpu_bindings)

set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_POSITION_INDEPENDENT_CODE ON)

if(APPLE)
    set(OpenMP_C_FLAGS "-Xpreprocessor -fopenmp -lomp")
    set(OpenMP_C_LIB_NAMES "omp")
    set(OpenMP_CXX_FLAGS "-Xpreprocessor -fopenmp -lomp")
    set(OpenMP_CXX_LIB_NAMES "omp")
    set(OpenMP_omp_LIBRARY "/opt/homebrew/opt/libomp/lib/libomp.dylib")
    set(OpenMP_INCLUDE_DIRS "/opt/homebrew/opt/libomp/include")
    include_directories("/usr/local/include" "/usr/local/opt/llvm/include")
    link_directories("/usr/local/lib" "/usr/local/opt/llvm/lib")
    include_directories("/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include")
    find_package(OpenMP REQUIRED)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -stdlib=libc++")

else()
    find_package(OpenMP REQUIRED)
endif()

find_package(Python3 REQUIRED COMPONENTS Interpreter Development)
find_package(pybind11 REQUIRED)

add_library(hip_cpu_bindings MODULE 
    tensorops/bindings.cpp 
    tensorops/tensor_backend.cpp
)
target_include_directories(hip_cpu_bindings PRIVATE 
    ${CMAKE_CURRENT_SOURCE_DIR}/../repos/HIP-CPU/include
    ${OpenMP_INCLUDE_DIRS}
)

target_link_libraries(hip_cpu_bindings PRIVATE 
    pybind11::module
)

# macOS specific OpenMP handling
if(APPLE)
    # Set OpenMP flags manually
    set(OpenMP_C_FLAGS "-Xpreprocessor -fopenmp")
    set(OpenMP_C_LIB_NAMES "omp")
    set(OpenMP_CXX_FLAGS "-Xpreprocessor -fopenmp")
    set(OpenMP_CXX_LIB_NAMES "omp")

    # Find OpenMP
    find_package(OpenMP REQUIRED)
else()
    find_package(OpenMP REQUIRED)
endif()

# Windows-specific settings
if(WIN32)
    set_target_properties(hip_cpu_bindings PROPERTIES 
        PREFIX "" 
        SUFFIX ".pyd"
        MSVC_RUNTIME_LIBRARY "MultiThreadedDLL"  
    )
    
    target_compile_options(hip_cpu_bindings PRIVATE 
        /openmp:experimental 
        /bigobj             
    )
else()
    set_target_properties(hip_cpu_bindings PROPERTIES 
        PREFIX "" 
        SUFFIX ".so"
    )
endif()

# Include directories
target_include_directories(hip_cpu_bindings PRIVATE
    ${CMAKE_SOURCE_DIR}
    ${CMAKE_SOURCE_DIR}/repos/HIP-CPU/include
)

# Enable C++17 which is required by HIP-CPU
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Define HIP-CPU specific macros
target_compile_definitions(hip_cpu_bindings PRIVATE
    __HIP_CPU_RT__
    __HIP_PLATFORM_CPU__
)

# Enable OpenMP for HIP-CPU parallel execution
if(MSVC)
    target_compile_options(hip_cpu_bindings PRIVATE /openmp:experimental)
else()
    target_compile_options(hip_cpu_bindings PRIVATE -fopenmp)
endif()
